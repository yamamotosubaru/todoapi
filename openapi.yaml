openapi: 3.0.3
info:
  title: TODO API
  description: Node.js + Express + MySQL を使用したTODO管理API
  version: 1.0.0
  contact:
    name: API Support
  license:
    name: ISC
servers:
  - url: http://localhost:3000
    description: Development server

paths:
  /post:
    post:
      summary: TODO作成
      description: 新しいTODOを作成します
      operationId: createTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoRequest'
            examples:
              example1:
                summary: 基本的な例
                value:
                  title: "買い物"
                  content: "牛乳を買う"
      responses:
        '201':
          description: TODO作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoResponse'
              examples:
                example1:
                  summary: 作成成功例
                  value:
                    todo:
                      id: 1
                      title: "買い物"
                      content: "牛乳を買う"
                      status: "TODO"
                      created_at: "2024-01-01T00:00:00.000Z"
                      updated_at: "2024-01-01T00:00:00.000Z"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: TODO一覧取得
      description: 全てのTODOを作成日時の降順で取得します
      operationId: getTodos
      responses:
        '200':
          description: TODO一覧取得成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodosResponse'
              examples:
                example1:
                  summary: TODO一覧例
                  value:
                    todos:
                      - id: 1
                        title: "買い物"
                        content: "牛乳を買う"
                        status: "TODO"
                        created_at: "2024-01-01T00:00:00.000Z"
                        updated_at: "2024-01-01T00:00:00.000Z"
                      - id: 2
                        title: "掃除"
                        content: "部屋を掃除する"
                        status: "IN_PROGRESS"
                        created_at: "2024-01-01T01:00:00.000Z"
                        updated_at: "2024-01-01T01:30:00.000Z"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /search:
    get:
      summary: TODO検索
      description: タイトルまたは内容に指定したキーワードを含むTODOを検索します
      operationId: searchTodos
      parameters:
        - name: word
          in: query
          required: true
          description: 検索キーワード
          schema:
            type: string
            minLength: 1
          example: "買い物"
      responses:
        '200':
          description: TODO検索成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodosResponse'
              examples:
                example1:
                  summary: 検索結果例
                  value:
                    todos:
                      - id: 1
                        title: "買い物"
                        content: "牛乳を買う"
                        status: "TODO"
                        created_at: "2024-01-01T00:00:00.000Z"
                        updated_at: "2024-01-01T00:00:00.000Z"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /post/{id}:
    put:
      summary: TODO更新
      description: 指定したIDのTODOを更新します
      operationId: updateTodo
      parameters:
        - name: id
          in: path
          required: true
          description: 更新するTODOのID
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoRequest'
            examples:
              example1:
                summary: 更新例
                value:
                  title: "買い物"
                  content: "牛乳とパンを買う"
                  status: "IN_PROGRESS"
      responses:
        '200':
          description: TODO更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoResponse'
              examples:
                example1:
                  summary: 更新成功例
                  value:
                    todo:
                      id: 1
                      title: "買い物"
                      content: "牛乳とパンを買う"
                      status: "IN_PROGRESS"
                      created_at: "2024-01-01T00:00:00.000Z"
                      updated_at: "2024-01-01T01:00:00.000Z"
        '404':
          description: TODOが見つからない
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example1:
                  summary: 404エラー例
                  value:
                    error: "Todo not found"
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: TODO削除
      description: 指定したIDのTODOを削除します
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          required: true
          description: 削除するTODOのID
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 1
      responses:
        '200':
          description: TODO削除成功
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example1:
                  summary: 削除成功例
                  value: {}
        '500':
          description: サーバーエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: TODO ID
          example: 1
        title:
          type: string
          description: TODOタイトル
          example: "買い物"
        content:
          type: string
          description: TODO内容
          example: "牛乳を買う"
        status:
          type: string
          enum: ["TODO", "DONE", "IN_PROGRESS"]
          description: TODOステータス
          example: "TODO"
        created_at:
          type: string
          format: date-time
          description: 作成日時
          example: "2024-01-01T00:00:00.000Z"
        updated_at:
          type: string
          format: date-time
          description: 更新日時
          example: "2024-01-01T00:00:00.000Z"
      required:
        - id
        - title
        - content
        - status
        - created_at
        - updated_at

    CreateTodoRequest:
      type: object
      properties:
        title:
          type: string
          description: TODOタイトル
          minLength: 1
          example: "買い物"
        content:
          type: string
          description: TODO内容
          minLength: 1
          example: "牛乳を買う"
      required:
        - title
        - content

    UpdateTodoRequest:
      type: object
      properties:
        title:
          type: string
          description: TODOタイトル
          minLength: 1
          example: "買い物"
        content:
          type: string
          description: TODO内容
          minLength: 1
          example: "牛乳とパンを買う"
        status:
          type: string
          enum: ["TODO", "DONE", "IN_PROGRESS"]
          description: TODOステータス（省略時はTODO）
          example: "IN_PROGRESS"
      required:
        - title
        - content

    TodoResponse:
      type: object
      properties:
        todo:
          $ref: '#/components/schemas/Todo'
      required:
        - todo

    TodosResponse:
      type: object
      properties:
        todos:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
          description: TODO一覧
      required:
        - todos

    Error:
      type: object
      properties:
        error:
          type: string
          description: エラーメッセージ
          example: "Todo not found"
      required:
        - error

  examples:
    TodoExample:
      summary: TODOオブジェクトの例
      value:
        id: 1
        title: "買い物"
        content: "牛乳を買う"
        status: "TODO"
        created_at: "2024-01-01T00:00:00.000Z"
        updated_at: "2024-01-01T00:00:00.000Z"